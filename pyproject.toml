[tool.poetry]
name = "orchestrator"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.scripts]
planner = "orchestrator.agents.planner.planner:main"
executor = "orchestrator.agents.executor.executor:main"
app = "orchestrator.app:main"
main = "orchestrator.main:main"

[tool.poetry.plugins.dotenv]
ignore = "false"
location = ".env"

[tool.poetry.dependencies]
python = "^3.11"
langgraph = "^0.1.7"
langsmith = "^0.1.85"
langchain = "^0.2.7"
langchain-community = "^0.2.7"
langchain-core = "^0.2.13"
ollama = "^0.2.1"
chromadb = "^0.5.4"
httpx = "^0.27.0"
langchain-openai = "^0.1.15"
pydantic = "^2.8.2"
python-dotenv = "^1.0.1"
torch = "^2.4.0"
sentence-transformers = "^3.0.1"
ipython = "^8.26.0"
groq = "^0.11.0"
langchain_experimental = "^0.0.65"

[tool.poetry.group.dev.dependencies]
ruff = "^0.5.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = [
    # pycodestyle (Errors, Warnings)
    "E",
    "W",
    # Pyflakes
    "F",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pep8-naming
    "N",
    # pylint
    "PL",
]
ignore = ["PLR0913", "PLR0912", "PLR0911", "PLR2004", "PLR0915"]

[tool.ruff.lint.pycodestyle]
max-line-length = 100